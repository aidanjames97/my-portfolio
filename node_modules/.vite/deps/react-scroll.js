import { __commonJS, require_react } from "./react-CSb6HjG4.js";
import { require_react_dom } from "./react-dom-CZLEvuSq.js";

//#region node_modules/lodash.throttle/index.js
var require_lodash = /* @__PURE__ */ __commonJS({ "node_modules/lodash.throttle/index.js": ((exports, module) => {
	/**
	* lodash (Custom Build) <https://lodash.com/>
	* Build: `lodash modularize exports="npm" -o ./`
	* Copyright jQuery Foundation and other contributors <https://jquery.org/>
	* Released under MIT license <https://lodash.com/license>
	* Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	* Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	*/
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = "Expected a function";
	/** Used as references for various `Number` constants. */
	var NAN = NaN;
	/** `Object#toString` result references. */
	var symbolTag = "[object Symbol]";
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
	/** Detect free variable `self`. */
	var freeSelf = typeof self == "object" && self && self.Object === Object && self;
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function("return this")();
	/**
	* Used to resolve the
	* [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	* of values.
	*/
	var objectToString = Object.prototype.toString;
	var nativeMax = Math.max, nativeMin = Math.min;
	/**
	* Gets the timestamp of the number of milliseconds that have elapsed since
	* the Unix epoch (1 January 1970 00:00:00 UTC).
	*
	* @static
	* @memberOf _
	* @since 2.4.0
	* @category Date
	* @returns {number} Returns the timestamp.
	* @example
	*
	* _.defer(function(stamp) {
	*   console.log(_.now() - stamp);
	* }, _.now());
	* // => Logs the number of milliseconds it took for the deferred invocation.
	*/
	var now = function() {
		return root.Date.now();
	};
	/**
	* Creates a debounced function that delays invoking `func` until after `wait`
	* milliseconds have elapsed since the last time the debounced function was
	* invoked. The debounced function comes with a `cancel` method to cancel
	* delayed `func` invocations and a `flush` method to immediately invoke them.
	* Provide `options` to indicate whether `func` should be invoked on the
	* leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	* with the last arguments provided to the debounced function. Subsequent
	* calls to the debounced function return the result of the last `func`
	* invocation.
	*
	* **Note:** If `leading` and `trailing` options are `true`, `func` is
	* invoked on the trailing edge of the timeout only if the debounced function
	* is invoked more than once during the `wait` timeout.
	*
	* If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	* until to the next tick, similar to `setTimeout` with a timeout of `0`.
	*
	* See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	* for details over the differences between `_.debounce` and `_.throttle`.
	*
	* @static
	* @memberOf _
	* @since 0.1.0
	* @category Function
	* @param {Function} func The function to debounce.
	* @param {number} [wait=0] The number of milliseconds to delay.
	* @param {Object} [options={}] The options object.
	* @param {boolean} [options.leading=false]
	*  Specify invoking on the leading edge of the timeout.
	* @param {number} [options.maxWait]
	*  The maximum time `func` is allowed to be delayed before it's invoked.
	* @param {boolean} [options.trailing=true]
	*  Specify invoking on the trailing edge of the timeout.
	* @returns {Function} Returns the new debounced function.
	* @example
	*
	* // Avoid costly calculations while the window size is in flux.
	* jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	*
	* // Invoke `sendMail` when clicked, debouncing subsequent calls.
	* jQuery(element).on('click', _.debounce(sendMail, 300, {
	*   'leading': true,
	*   'trailing': false
	* }));
	*
	* // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	* var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	* var source = new EventSource('/stream');
	* jQuery(source).on('message', debounced);
	*
	* // Cancel the trailing debounced invocation.
	* jQuery(window).on('popstate', debounced.cancel);
	*/
	function debounce(func, wait, options) {
		var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
		if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
		wait = toNumber(wait) || 0;
		if (isObject(options)) {
			leading = !!options.leading;
			maxing = "maxWait" in options;
			maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
			trailing = "trailing" in options ? !!options.trailing : trailing;
		}
		function invokeFunc(time) {
			var args = lastArgs, thisArg = lastThis;
			lastArgs = lastThis = void 0;
			lastInvokeTime = time;
			result = func.apply(thisArg, args);
			return result;
		}
		function leadingEdge(time) {
			lastInvokeTime = time;
			timerId = setTimeout(timerExpired, wait);
			return leading ? invokeFunc(time) : result;
		}
		function remainingWait(time) {
			var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result$1 = wait - timeSinceLastCall;
			return maxing ? nativeMin(result$1, maxWait - timeSinceLastInvoke) : result$1;
		}
		function shouldInvoke(time) {
			var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
			return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
		}
		function timerExpired() {
			var time = now();
			if (shouldInvoke(time)) return trailingEdge(time);
			timerId = setTimeout(timerExpired, remainingWait(time));
		}
		function trailingEdge(time) {
			timerId = void 0;
			if (trailing && lastArgs) return invokeFunc(time);
			lastArgs = lastThis = void 0;
			return result;
		}
		function cancel() {
			if (timerId !== void 0) clearTimeout(timerId);
			lastInvokeTime = 0;
			lastArgs = lastCallTime = lastThis = timerId = void 0;
		}
		function flush() {
			return timerId === void 0 ? result : trailingEdge(now());
		}
		function debounced() {
			var time = now(), isInvoking = shouldInvoke(time);
			lastArgs = arguments;
			lastThis = this;
			lastCallTime = time;
			if (isInvoking) {
				if (timerId === void 0) return leadingEdge(lastCallTime);
				if (maxing) {
					timerId = setTimeout(timerExpired, wait);
					return invokeFunc(lastCallTime);
				}
			}
			if (timerId === void 0) timerId = setTimeout(timerExpired, wait);
			return result;
		}
		debounced.cancel = cancel;
		debounced.flush = flush;
		return debounced;
	}
	/**
	* Creates a throttled function that only invokes `func` at most once per
	* every `wait` milliseconds. The throttled function comes with a `cancel`
	* method to cancel delayed `func` invocations and a `flush` method to
	* immediately invoke them. Provide `options` to indicate whether `func`
	* should be invoked on the leading and/or trailing edge of the `wait`
	* timeout. The `func` is invoked with the last arguments provided to the
	* throttled function. Subsequent calls to the throttled function return the
	* result of the last `func` invocation.
	*
	* **Note:** If `leading` and `trailing` options are `true`, `func` is
	* invoked on the trailing edge of the timeout only if the throttled function
	* is invoked more than once during the `wait` timeout.
	*
	* If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	* until to the next tick, similar to `setTimeout` with a timeout of `0`.
	*
	* See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	* for details over the differences between `_.throttle` and `_.debounce`.
	*
	* @static
	* @memberOf _
	* @since 0.1.0
	* @category Function
	* @param {Function} func The function to throttle.
	* @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	* @param {Object} [options={}] The options object.
	* @param {boolean} [options.leading=true]
	*  Specify invoking on the leading edge of the timeout.
	* @param {boolean} [options.trailing=true]
	*  Specify invoking on the trailing edge of the timeout.
	* @returns {Function} Returns the new throttled function.
	* @example
	*
	* // Avoid excessively updating the position while scrolling.
	* jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	*
	* // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	* var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	* jQuery(element).on('click', throttled);
	*
	* // Cancel the trailing throttled invocation.
	* jQuery(window).on('popstate', throttled.cancel);
	*/
	function throttle(func, wait, options) {
		var leading = true, trailing = true;
		if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
		if (isObject(options)) {
			leading = "leading" in options ? !!options.leading : leading;
			trailing = "trailing" in options ? !!options.trailing : trailing;
		}
		return debounce(func, wait, {
			"leading": leading,
			"maxWait": wait,
			"trailing": trailing
		});
	}
	/**
	* Checks if `value` is the
	* [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	* of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	*
	* @static
	* @memberOf _
	* @since 0.1.0
	* @category Lang
	* @param {*} value The value to check.
	* @returns {boolean} Returns `true` if `value` is an object, else `false`.
	* @example
	*
	* _.isObject({});
	* // => true
	*
	* _.isObject([1, 2, 3]);
	* // => true
	*
	* _.isObject(_.noop);
	* // => true
	*
	* _.isObject(null);
	* // => false
	*/
	function isObject(value) {
		var type = typeof value;
		return !!value && (type == "object" || type == "function");
	}
	/**
	* Checks if `value` is object-like. A value is object-like if it's not `null`
	* and has a `typeof` result of "object".
	*
	* @static
	* @memberOf _
	* @since 4.0.0
	* @category Lang
	* @param {*} value The value to check.
	* @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	* @example
	*
	* _.isObjectLike({});
	* // => true
	*
	* _.isObjectLike([1, 2, 3]);
	* // => true
	*
	* _.isObjectLike(_.noop);
	* // => false
	*
	* _.isObjectLike(null);
	* // => false
	*/
	function isObjectLike(value) {
		return !!value && typeof value == "object";
	}
	/**
	* Checks if `value` is classified as a `Symbol` primitive or object.
	*
	* @static
	* @memberOf _
	* @since 4.0.0
	* @category Lang
	* @param {*} value The value to check.
	* @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	* @example
	*
	* _.isSymbol(Symbol.iterator);
	* // => true
	*
	* _.isSymbol('abc');
	* // => false
	*/
	function isSymbol(value) {
		return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
	}
	/**
	* Converts `value` to a number.
	*
	* @static
	* @memberOf _
	* @since 4.0.0
	* @category Lang
	* @param {*} value The value to process.
	* @returns {number} Returns the number.
	* @example
	*
	* _.toNumber(3.2);
	* // => 3.2
	*
	* _.toNumber(Number.MIN_VALUE);
	* // => 5e-324
	*
	* _.toNumber(Infinity);
	* // => Infinity
	*
	* _.toNumber('3.2');
	* // => 3.2
	*/
	function toNumber(value) {
		if (typeof value == "number") return value;
		if (isSymbol(value)) return NAN;
		if (isObject(value)) {
			var other = typeof value.valueOf == "function" ? value.valueOf() : value;
			value = isObject(other) ? other + "" : other;
		}
		if (typeof value != "string") return value === 0 ? value : +value;
		value = value.replace(reTrim, "");
		var isBinary = reIsBinary.test(value);
		return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
	}
	module.exports = throttle;
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/passive-event-listeners.js
var require_passive_event_listeners = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/passive-event-listeners.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {
		var listenerName = listener.name;
		if (!listenerName) {
			listenerName = eventName;
			console.warn("Listener must be a named function.");
		}
		if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, /* @__PURE__ */ new Set());
		var listeners = attachedListeners.get(eventName);
		if (listeners.has(listenerName)) return;
		var supportsPassiveOption = function() {
			var supportsPassiveOption$1 = false;
			try {
				var opts = Object.defineProperty({}, "passive", { get: function get() {
					supportsPassiveOption$1 = true;
				} });
				window.addEventListener("test", null, opts);
			} catch (e) {}
			return supportsPassiveOption$1;
		}();
		target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);
		listeners.add(listenerName);
	};
	exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {
		target.removeEventListener(eventName, listener);
		attachedListeners.get(eventName).delete(listener.name || eventName);
	};
	var attachedListeners = /* @__PURE__ */ new Map();
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroll-spy.js
var require_scroll_spy = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroll-spy.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _lodash = require_lodash();
	var _lodash2 = _interopRequireDefault$9(_lodash);
	var _passiveEventListeners$1 = require_passive_event_listeners();
	function _interopRequireDefault$9(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	var eventThrottler = function eventThrottler$1(eventHandler) {
		var throttleAmount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 66;
		return (0, _lodash2.default)(eventHandler, throttleAmount);
	};
	var scrollSpy$1 = {
		spyCallbacks: [],
		spySetState: [],
		scrollSpyContainers: [],
		mount: function mount(scrollSpyContainer, throttle$1) {
			if (scrollSpyContainer) {
				var eventHandler = eventThrottler(function(event) {
					scrollSpy$1.scrollHandler(scrollSpyContainer);
				}, throttle$1);
				scrollSpy$1.scrollSpyContainers.push(scrollSpyContainer);
				(0, _passiveEventListeners$1.addPassiveEventListener)(scrollSpyContainer, "scroll", eventHandler);
				return function() {
					(0, _passiveEventListeners$1.removePassiveEventListener)(scrollSpyContainer, "scroll", eventHandler);
					scrollSpy$1.scrollSpyContainers.splice(scrollSpy$1.scrollSpyContainers.indexOf(scrollSpyContainer), 1);
				};
			}
			return function() {};
		},
		isMounted: function isMounted(scrollSpyContainer) {
			return scrollSpy$1.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1;
		},
		currentPositionX: function currentPositionX$1(scrollSpyContainer) {
			if (scrollSpyContainer === document) {
				var supportPageOffset = window.scrollY !== void 0;
				var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
				return supportPageOffset ? window.scrollX : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
			} else return scrollSpyContainer.scrollLeft;
		},
		currentPositionY: function currentPositionY$1(scrollSpyContainer) {
			if (scrollSpyContainer === document) {
				var supportPageOffset = window.scrollX !== void 0;
				var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
				return supportPageOffset ? window.scrollY : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
			} else return scrollSpyContainer.scrollTop;
		},
		scrollHandler: function scrollHandler(scrollSpyContainer) {
			(scrollSpy$1.scrollSpyContainers[scrollSpy$1.scrollSpyContainers.indexOf(scrollSpyContainer)].spyCallbacks || []).forEach(function(c) {
				return c(scrollSpy$1.currentPositionX(scrollSpyContainer), scrollSpy$1.currentPositionY(scrollSpyContainer));
			});
		},
		addStateHandler: function addStateHandler(handler) {
			scrollSpy$1.spySetState.push(handler);
		},
		addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {
			var container = scrollSpy$1.scrollSpyContainers[scrollSpy$1.scrollSpyContainers.indexOf(scrollSpyContainer)];
			if (!container.spyCallbacks) container.spyCallbacks = [];
			container.spyCallbacks.push(handler);
		},
		updateStates: function updateStates() {
			scrollSpy$1.spySetState.forEach(function(s) {
				return s();
			});
		},
		unmount: function unmount(stateHandler, spyHandler) {
			scrollSpy$1.scrollSpyContainers.forEach(function(c) {
				return c.spyCallbacks && c.spyCallbacks.length && c.spyCallbacks.indexOf(spyHandler) > -1 && c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1);
			});
			if (scrollSpy$1.spySetState && scrollSpy$1.spySetState.length && scrollSpy$1.spySetState.indexOf(stateHandler) > -1) scrollSpy$1.spySetState.splice(scrollSpy$1.spySetState.indexOf(stateHandler), 1);
			document.removeEventListener("scroll", scrollSpy$1.scrollHandler);
		},
		update: function update() {
			return scrollSpy$1.scrollSpyContainers.forEach(function(c) {
				return scrollSpy$1.scrollHandler(c);
			});
		}
	};
	exports.default = scrollSpy$1;
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/utils.js
var require_utils = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/utils.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var updateHash = function updateHash$1(hash, historyUpdate) {
		var hashVal = hash.indexOf("#") === 0 ? hash.substring(1) : hash;
		var hashToUpdate = hashVal ? "#" + hashVal : "";
		var curLoc = window && window.location;
		var urlToPush = hashToUpdate ? curLoc.pathname + curLoc.search + hashToUpdate : curLoc.pathname + curLoc.search;
		historyUpdate ? history.pushState(history.state, "", urlToPush) : history.replaceState(history.state, "", urlToPush);
	};
	var getHash = function getHash$1() {
		return window.location.hash.replace(/^#/, "");
	};
	var filterElementInContainer = function filterElementInContainer$1(container) {
		return function(element) {
			return container.contains ? container != element && container.contains(element) : !!(container.compareDocumentPosition(element) & 16);
		};
	};
	var isPositioned = function isPositioned$1(element) {
		return getComputedStyle(element).position !== "static";
	};
	var getElementOffsetInfoUntil = function getElementOffsetInfoUntil$1(element, predicate) {
		var offsetTop = element.offsetTop;
		var currentOffsetParent = element.offsetParent;
		while (currentOffsetParent && !predicate(currentOffsetParent)) {
			offsetTop += currentOffsetParent.offsetTop;
			currentOffsetParent = currentOffsetParent.offsetParent;
		}
		return {
			offsetTop,
			offsetParent: currentOffsetParent
		};
	};
	var scrollOffset = function scrollOffset$1(c, t, horizontal) {
		if (horizontal) return c === document ? t.getBoundingClientRect().left + (window.scrollX || window.pageXOffset) : getComputedStyle(c).position !== "static" ? t.offsetLeft : t.offsetLeft - c.offsetLeft;
		else {
			if (c === document) return t.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);
			if (isPositioned(c)) {
				if (t.offsetParent !== c) {
					var _getElementOffsetInfo = getElementOffsetInfoUntil(t, function isContainerElementOrDocument(e) {
						return e === c || e === document;
					}), offsetTop = _getElementOffsetInfo.offsetTop;
					if (_getElementOffsetInfo.offsetParent !== c) throw new Error("Seems containerElement is not an ancestor of the Element");
					return offsetTop;
				}
				return t.offsetTop;
			}
			if (t.offsetParent === c.offsetParent) return t.offsetTop - c.offsetTop;
			var isDocument = function isDocument$1(e) {
				return e === document;
			};
			return getElementOffsetInfoUntil(t, isDocument).offsetTop - getElementOffsetInfoUntil(c, isDocument).offsetTop;
		}
	};
	exports.default = {
		updateHash,
		getHash,
		filterElementInContainer,
		scrollOffset
	};
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/smooth.js
var require_smooth = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/smooth.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
		defaultEasing: function defaultEasing(x) {
			if (x < .5) return Math.pow(x * 2, 2) / 2;
			return 1 - Math.pow((1 - x) * 2, 2) / 2;
		},
		linear: function linear(x) {
			return x;
		},
		easeInQuad: function easeInQuad(x) {
			return x * x;
		},
		easeOutQuad: function easeOutQuad(x) {
			return x * (2 - x);
		},
		easeInOutQuad: function easeInOutQuad(x) {
			return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;
		},
		easeInCubic: function easeInCubic(x) {
			return x * x * x;
		},
		easeOutCubic: function easeOutCubic(x) {
			return --x * x * x + 1;
		},
		easeInOutCubic: function easeInOutCubic(x) {
			return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;
		},
		easeInQuart: function easeInQuart(x) {
			return x * x * x * x;
		},
		easeOutQuart: function easeOutQuart(x) {
			return 1 - --x * x * x * x;
		},
		easeInOutQuart: function easeInOutQuart(x) {
			return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;
		},
		easeInQuint: function easeInQuint(x) {
			return x * x * x * x * x;
		},
		easeOutQuint: function easeOutQuint(x) {
			return 1 + --x * x * x * x * x;
		},
		easeInOutQuint: function easeInOutQuint(x) {
			return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;
		}
	};
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/cancel-events.js
var require_cancel_events = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/cancel-events.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _passiveEventListeners = require_passive_event_listeners();
	var events = [
		"mousedown",
		"wheel",
		"touchmove",
		"keydown"
	];
	exports.default = { subscribe: function subscribe(cancelEvent) {
		return typeof document !== "undefined" && events.forEach(function(event) {
			return (0, _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);
		});
	} };
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroll-events.js
var require_scroll_events = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroll-events.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var Events = {
		registered: {},
		scrollEvent: {
			register: function register(evtName, callback) {
				Events.registered[evtName] = callback;
			},
			remove: function remove(evtName) {
				Events.registered[evtName] = null;
			}
		}
	};
	exports.default = Events;
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/animate-scroll.js
var require_animate_scroll = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/animate-scroll.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _extends$5 = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _utils$2 = require_utils();
	_interopRequireDefault$8(_utils$2);
	var _smooth = require_smooth();
	var _smooth2 = _interopRequireDefault$8(_smooth);
	var _cancelEvents = require_cancel_events();
	var _cancelEvents2 = _interopRequireDefault$8(_cancelEvents);
	var _scrollEvents$2 = require_scroll_events();
	var _scrollEvents2$2 = _interopRequireDefault$8(_scrollEvents$2);
	function _interopRequireDefault$8(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	var getAnimationType = function getAnimationType$1(options) {
		return _smooth2.default[options.smooth] || _smooth2.default.defaultEasing;
	};
	var functionWrapper = function functionWrapper$1(value) {
		return typeof value === "function" ? value : function() {
			return value;
		};
	};
	var currentWindowProperties = function currentWindowProperties$1() {
		if (typeof window !== "undefined") return window.requestAnimationFrame || window.webkitRequestAnimationFrame;
	};
	var requestAnimationFrameHelper = function() {
		return currentWindowProperties() || function(callback, element, delay) {
			window.setTimeout(callback, delay || 1e3 / 60, (/* @__PURE__ */ new Date()).getTime());
		};
	}();
	var makeData = function makeData$1() {
		return {
			currentPosition: 0,
			startPosition: 0,
			targetPosition: 0,
			progress: 0,
			duration: 0,
			cancel: false,
			target: null,
			containerElement: null,
			to: null,
			start: null,
			delta: null,
			percent: null,
			delayTimeout: null
		};
	};
	var currentPositionX = function currentPositionX$1(options) {
		var containerElement = options.data.containerElement;
		if (containerElement && containerElement !== document && containerElement !== document.body) return containerElement.scrollLeft;
		else {
			var supportPageOffset = window.pageXOffset !== void 0;
			var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
			return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
		}
	};
	var currentPositionY = function currentPositionY$1(options) {
		var containerElement = options.data.containerElement;
		if (containerElement && containerElement !== document && containerElement !== document.body) return containerElement.scrollTop;
		else {
			var supportPageOffset = window.pageXOffset !== void 0;
			var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
			return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
		}
	};
	var scrollContainerWidth = function scrollContainerWidth$1(options) {
		var containerElement = options.data.containerElement;
		if (containerElement && containerElement !== document && containerElement !== document.body) return containerElement.scrollWidth - containerElement.offsetWidth;
		else {
			var body = document.body;
			var html = document.documentElement;
			return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);
		}
	};
	var scrollContainerHeight = function scrollContainerHeight$1(options) {
		var containerElement = options.data.containerElement;
		if (containerElement && containerElement !== document && containerElement !== document.body) return containerElement.scrollHeight - containerElement.offsetHeight;
		else {
			var body = document.body;
			var html = document.documentElement;
			return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
		}
	};
	var animateScroll = function animateScroll$1(easing, options, timestamp) {
		var data = options.data;
		if (!options.ignoreCancelEvents && data.cancel) {
			if (_scrollEvents2$2.default.registered["end"]) _scrollEvents2$2.default.registered["end"](data.to, data.target, data.currentPositionY);
			return;
		}
		data.delta = Math.round(data.targetPosition - data.startPosition);
		if (data.start === null) data.start = timestamp;
		data.progress = timestamp - data.start;
		data.percent = data.progress >= data.duration ? 1 : easing(data.progress / data.duration);
		data.currentPosition = data.startPosition + Math.ceil(data.delta * data.percent);
		if (data.containerElement && data.containerElement !== document && data.containerElement !== document.body) if (options.horizontal) data.containerElement.scrollLeft = data.currentPosition;
		else data.containerElement.scrollTop = data.currentPosition;
		else if (options.horizontal) window.scrollTo(data.currentPosition, 0);
		else window.scrollTo(0, data.currentPosition);
		if (data.percent < 1) {
			var easedAnimate = animateScroll$1.bind(null, easing, options);
			requestAnimationFrameHelper.call(window, easedAnimate);
			return;
		}
		if (_scrollEvents2$2.default.registered["end"]) _scrollEvents2$2.default.registered["end"](data.to, data.target, data.currentPosition);
	};
	var setContainer = function setContainer$1(options) {
		options.data.containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;
	};
	var animateTopScroll = function animateTopScroll$1(scrollOffset$1, options, to, target) {
		options.data = options.data || makeData();
		window.clearTimeout(options.data.delayTimeout);
		_cancelEvents2.default.subscribe(function setCancel() {
			options.data.cancel = true;
		});
		setContainer(options);
		options.data.start = null;
		options.data.cancel = false;
		options.data.startPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);
		options.data.targetPosition = options.absolute ? scrollOffset$1 : scrollOffset$1 + options.data.startPosition;
		if (options.data.startPosition === options.data.targetPosition) {
			if (_scrollEvents2$2.default.registered["end"]) _scrollEvents2$2.default.registered["end"](options.data.to, options.data.target, options.data.currentPosition);
			return;
		}
		options.data.delta = Math.round(options.data.targetPosition - options.data.startPosition);
		options.data.duration = functionWrapper(options.duration)(options.data.delta);
		options.data.duration = isNaN(parseFloat(options.data.duration)) ? 1e3 : parseFloat(options.data.duration);
		options.data.to = to;
		options.data.target = target;
		var easing = getAnimationType(options);
		var easedAnimate = animateScroll.bind(null, easing, options);
		if (options && options.delay > 0) {
			options.data.delayTimeout = window.setTimeout(function() {
				if (_scrollEvents2$2.default.registered["begin"]) _scrollEvents2$2.default.registered["begin"](options.data.to, options.data.target);
				requestAnimationFrameHelper.call(window, easedAnimate);
			}, options.delay);
			return;
		}
		if (_scrollEvents2$2.default.registered["begin"]) _scrollEvents2$2.default.registered["begin"](options.data.to, options.data.target);
		requestAnimationFrameHelper.call(window, easedAnimate);
	};
	var proceedOptions = function proceedOptions$1(options) {
		options = _extends$5({}, options);
		options.data = options.data || makeData();
		options.absolute = true;
		return options;
	};
	var scrollToTop = function scrollToTop$1(options) {
		animateTopScroll(0, proceedOptions(options));
	};
	var scrollTo = function scrollTo$1(toPosition, options) {
		animateTopScroll(toPosition, proceedOptions(options));
	};
	var scrollToBottom = function scrollToBottom$1(options) {
		options = proceedOptions(options);
		setContainer(options);
		animateTopScroll(options.horizontal ? scrollContainerWidth(options) : scrollContainerHeight(options), options);
	};
	var scrollMore = function scrollMore$1(toPosition, options) {
		options = proceedOptions(options);
		setContainer(options);
		var currentPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);
		animateTopScroll(toPosition + currentPosition, options);
	};
	exports.default = {
		animateTopScroll,
		getAnimationType,
		scrollToTop,
		scrollToBottom,
		scrollTo,
		scrollMore
	};
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroller.js
var require_scroller = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroller.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _extends$4 = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _utils$1 = require_utils();
	var _utils2$1 = _interopRequireDefault$7(_utils$1);
	var _animateScroll$1 = require_animate_scroll();
	var _animateScroll2$1 = _interopRequireDefault$7(_animateScroll$1);
	var _scrollEvents$1 = require_scroll_events();
	var _scrollEvents2$1 = _interopRequireDefault$7(_scrollEvents$1);
	function _interopRequireDefault$7(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	var __mapped = {};
	var __activeLink = void 0;
	exports.default = {
		unmount: function unmount() {
			__mapped = {};
		},
		register: function register(name, element) {
			__mapped[name] = element;
		},
		unregister: function unregister(name) {
			delete __mapped[name];
		},
		get: function get(name) {
			return __mapped[name] || document.getElementById(name) || document.getElementsByName(name)[0] || document.getElementsByClassName(name)[0];
		},
		setActiveLink: function setActiveLink(link) {
			return __activeLink = link;
		},
		getActiveLink: function getActiveLink() {
			return __activeLink;
		},
		scrollTo: function scrollTo$1(to, props) {
			var target = this.get(to);
			if (!target) {
				console.warn("target Element not found");
				return;
			}
			props = _extends$4({}, props, { absolute: false });
			var containerId = props.containerId;
			var container = props.container;
			var containerElement = void 0;
			if (containerId) containerElement = document.getElementById(containerId);
			else if (container && container.nodeType) containerElement = container;
			else containerElement = document;
			props.absolute = true;
			var horizontal = props.horizontal;
			var scrollOffset$1 = _utils2$1.default.scrollOffset(containerElement, target, horizontal) + (props.offset || 0);
			if (!props.smooth) {
				if (_scrollEvents2$1.default.registered["begin"]) _scrollEvents2$1.default.registered["begin"](to, target);
				if (containerElement === document) if (props.horizontal) window.scrollTo(scrollOffset$1, 0);
				else window.scrollTo(0, scrollOffset$1);
				else containerElement.scrollTop = scrollOffset$1;
				if (_scrollEvents2$1.default.registered["end"]) _scrollEvents2$1.default.registered["end"](to, target);
				return;
			}
			_animateScroll2$1.default.animateTopScroll(scrollOffset$1, props, to, target);
		}
	};
}) });

//#endregion
//#region node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = /* @__PURE__ */ __commonJS({ "node_modules/react-is/cjs/react-is.development.js": ((exports) => {
	(function() {
		var hasSymbol = typeof Symbol === "function" && Symbol.for;
		var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
		var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
		var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
		var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
		var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
		var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
		var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
		var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
		var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
		var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
		var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
		var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
		var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
		var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
		var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
		var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
		var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
		var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
		function isValidElementType(type) {
			return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
		}
		function typeOf(object) {
			if (typeof object === "object" && object !== null) {
				var $$typeof = object.$$typeof;
				switch ($$typeof) {
					case REACT_ELEMENT_TYPE:
						var type = object.type;
						switch (type) {
							case REACT_ASYNC_MODE_TYPE:
							case REACT_CONCURRENT_MODE_TYPE:
							case REACT_FRAGMENT_TYPE:
							case REACT_PROFILER_TYPE:
							case REACT_STRICT_MODE_TYPE:
							case REACT_SUSPENSE_TYPE: return type;
							default:
								var $$typeofType = type && type.$$typeof;
								switch ($$typeofType) {
									case REACT_CONTEXT_TYPE:
									case REACT_FORWARD_REF_TYPE:
									case REACT_LAZY_TYPE:
									case REACT_MEMO_TYPE:
									case REACT_PROVIDER_TYPE: return $$typeofType;
									default: return $$typeof;
								}
						}
					case REACT_PORTAL_TYPE: return $$typeof;
				}
			}
		}
		var AsyncMode = REACT_ASYNC_MODE_TYPE;
		var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		var ContextConsumer = REACT_CONTEXT_TYPE;
		var ContextProvider = REACT_PROVIDER_TYPE;
		var Element = REACT_ELEMENT_TYPE;
		var ForwardRef = REACT_FORWARD_REF_TYPE;
		var Fragment = REACT_FRAGMENT_TYPE;
		var Lazy = REACT_LAZY_TYPE;
		var Memo = REACT_MEMO_TYPE;
		var Portal = REACT_PORTAL_TYPE;
		var Profiler = REACT_PROFILER_TYPE;
		var StrictMode = REACT_STRICT_MODE_TYPE;
		var Suspense = REACT_SUSPENSE_TYPE;
		var hasWarnedAboutDeprecatedIsAsyncMode = false;
		function isAsyncMode(object) {
			if (!hasWarnedAboutDeprecatedIsAsyncMode) {
				hasWarnedAboutDeprecatedIsAsyncMode = true;
				console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
			}
			return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
		}
		function isConcurrentMode(object) {
			return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		}
		function isContextConsumer(object) {
			return typeOf(object) === REACT_CONTEXT_TYPE;
		}
		function isContextProvider(object) {
			return typeOf(object) === REACT_PROVIDER_TYPE;
		}
		function isElement(object) {
			return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		}
		function isForwardRef(object) {
			return typeOf(object) === REACT_FORWARD_REF_TYPE;
		}
		function isFragment(object) {
			return typeOf(object) === REACT_FRAGMENT_TYPE;
		}
		function isLazy(object) {
			return typeOf(object) === REACT_LAZY_TYPE;
		}
		function isMemo(object) {
			return typeOf(object) === REACT_MEMO_TYPE;
		}
		function isPortal(object) {
			return typeOf(object) === REACT_PORTAL_TYPE;
		}
		function isProfiler(object) {
			return typeOf(object) === REACT_PROFILER_TYPE;
		}
		function isStrictMode(object) {
			return typeOf(object) === REACT_STRICT_MODE_TYPE;
		}
		function isSuspense(object) {
			return typeOf(object) === REACT_SUSPENSE_TYPE;
		}
		exports.AsyncMode = AsyncMode;
		exports.ConcurrentMode = ConcurrentMode;
		exports.ContextConsumer = ContextConsumer;
		exports.ContextProvider = ContextProvider;
		exports.Element = Element;
		exports.ForwardRef = ForwardRef;
		exports.Fragment = Fragment;
		exports.Lazy = Lazy;
		exports.Memo = Memo;
		exports.Portal = Portal;
		exports.Profiler = Profiler;
		exports.StrictMode = StrictMode;
		exports.Suspense = Suspense;
		exports.isAsyncMode = isAsyncMode;
		exports.isConcurrentMode = isConcurrentMode;
		exports.isContextConsumer = isContextConsumer;
		exports.isContextProvider = isContextProvider;
		exports.isElement = isElement;
		exports.isForwardRef = isForwardRef;
		exports.isFragment = isFragment;
		exports.isLazy = isLazy;
		exports.isMemo = isMemo;
		exports.isPortal = isPortal;
		exports.isProfiler = isProfiler;
		exports.isStrictMode = isStrictMode;
		exports.isSuspense = isSuspense;
		exports.isValidElementType = isValidElementType;
		exports.typeOf = typeOf;
	})();
}) });

//#endregion
//#region node_modules/react-is/index.js
var require_react_is = /* @__PURE__ */ __commonJS({ "node_modules/react-is/index.js": ((exports, module) => {
	module.exports = require_react_is_development();
}) });

//#endregion
//#region node_modules/object-assign/index.js
var require_object_assign = /* @__PURE__ */ __commonJS({ "node_modules/object-assign/index.js": ((exports, module) => {
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	function toObject(val) {
		if (val === null || val === void 0) throw new TypeError("Object.assign cannot be called with null or undefined");
		return Object(val);
	}
	function shouldUseNative() {
		try {
			if (!Object.assign) return false;
			var test1 = /* @__PURE__ */ new String("abc");
			test1[5] = "de";
			if (Object.getOwnPropertyNames(test1)[0] === "5") return false;
			var test2 = {};
			for (var i = 0; i < 10; i++) test2["_" + String.fromCharCode(i)] = i;
			if (Object.getOwnPropertyNames(test2).map(function(n) {
				return test2[n];
			}).join("") !== "0123456789") return false;
			var test3 = {};
			"abcdefghijklmnopqrst".split("").forEach(function(letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") return false;
			return true;
		} catch (err) {
			return false;
		}
	}
	module.exports = shouldUseNative() ? Object.assign : function(target, source) {
		var from;
		var to = toObject(target);
		var symbols;
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
			for (var key in from) if (hasOwnProperty.call(from, key)) to[key] = from[key];
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
			}
		}
		return to;
	};
}) });

//#endregion
//#region node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = /* @__PURE__ */ __commonJS({ "node_modules/prop-types/lib/ReactPropTypesSecret.js": ((exports, module) => {
	var ReactPropTypesSecret$2 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
	module.exports = ReactPropTypesSecret$2;
}) });

//#endregion
//#region node_modules/prop-types/lib/has.js
var require_has = /* @__PURE__ */ __commonJS({ "node_modules/prop-types/lib/has.js": ((exports, module) => {
	module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
}) });

//#endregion
//#region node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = /* @__PURE__ */ __commonJS({ "node_modules/prop-types/checkPropTypes.js": ((exports, module) => {
	var printWarning$1 = function() {};
	var ReactPropTypesSecret$1 = require_ReactPropTypesSecret();
	var loggedTypeFailures = {};
	var has$1 = require_has();
	printWarning$1 = function(text) {
		var message = "Warning: " + text;
		if (typeof console !== "undefined") console.error(message);
		try {
			throw new Error(message);
		} catch (x) {}
	};
	/**
	* Assert that the values match with the type specs.
	* Error messages are memorized and will only be shown once.
	*
	* @param {object} typeSpecs Map of name to a ReactPropType
	* @param {object} values Runtime values that need to be type-checked
	* @param {string} location e.g. "prop", "context", "child context"
	* @param {string} componentName Name of the component for error messages.
	* @param {?Function} getStack Returns the component stack.
	* @private
	*/
	function checkPropTypes$1(typeSpecs, values, location, componentName, getStack) {
		for (var typeSpecName in typeSpecs) if (has$1(typeSpecs, typeSpecName)) {
			var error;
			try {
				if (typeof typeSpecs[typeSpecName] !== "function") {
					var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
					err.name = "Invariant Violation";
					throw err;
				}
				error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
			} catch (ex) {
				error = ex;
			}
			if (error && !(error instanceof Error)) printWarning$1((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
			if (error instanceof Error && !(error.message in loggedTypeFailures)) {
				loggedTypeFailures[error.message] = true;
				var stack = getStack ? getStack() : "";
				printWarning$1("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
			}
		}
	}
	/**
	* Resets warning cache when testing.
	*
	* @private
	*/
	checkPropTypes$1.resetWarningCache = function() {
		loggedTypeFailures = {};
	};
	module.exports = checkPropTypes$1;
}) });

//#endregion
//#region node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = /* @__PURE__ */ __commonJS({ "node_modules/prop-types/factoryWithTypeCheckers.js": ((exports, module) => {
	var ReactIs$1 = require_react_is();
	var assign = require_object_assign();
	var ReactPropTypesSecret = require_ReactPropTypesSecret();
	var has = require_has();
	var checkPropTypes = require_checkPropTypes();
	var printWarning = function() {};
	printWarning = function(text) {
		var message = "Warning: " + text;
		if (typeof console !== "undefined") console.error(message);
		try {
			throw new Error(message);
		} catch (x) {}
	};
	function emptyFunctionThatReturnsNull() {
		return null;
	}
	module.exports = function(isValidElement, throwOnDirectAccess$1) {
		var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = "@@iterator";
		/**
		* Returns the iterator method function contained on the iterable object.
		*
		* Be sure to invoke the function with the iterable as context:
		*
		*     var iteratorFn = getIteratorFn(myIterable);
		*     if (iteratorFn) {
		*       var iterator = iteratorFn.call(myIterable);
		*       ...
		*     }
		*
		* @param {?object} maybeIterable
		* @return {?function}
		*/
		function getIteratorFn(maybeIterable) {
			var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
			if (typeof iteratorFn === "function") return iteratorFn;
		}
		/**
		* Collection of methods that allow declaration and validation of props that are
		* supplied to React components. Example usage:
		*
		*   var Props = require('ReactPropTypes');
		*   var MyArticle = React.createClass({
		*     propTypes: {
		*       // An optional string prop named "description".
		*       description: Props.string,
		*
		*       // A required enum prop named "category".
		*       category: Props.oneOf(['News','Photos']).isRequired,
		*
		*       // A prop named "dialog" that requires an instance of Dialog.
		*       dialog: Props.instanceOf(Dialog).isRequired
		*     },
		*     render: function() { ... }
		*   });
		*
		* A more formal specification of how these methods are used:
		*
		*   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		*   decl := ReactPropTypes.{type}(.isRequired)?
		*
		* Each and every declaration produces a function with the same signature. This
		* allows the creation of custom validation functions. For example:
		*
		*  var MyLink = React.createClass({
		*    propTypes: {
		*      // An optional string or URI prop named "href".
		*      href: function(props, propName, componentName) {
		*        var propValue = props[propName];
		*        if (propValue != null && typeof propValue !== 'string' &&
		*            !(propValue instanceof URI)) {
		*          return new Error(
		*            'Expected a string or an URI for ' + propName + ' in ' +
		*            componentName
		*          );
		*        }
		*      }
		*    },
		*    render: function() {...}
		*  });
		*
		* @internal
		*/
		var ANONYMOUS = "<<anonymous>>";
		var ReactPropTypes = {
			array: createPrimitiveTypeChecker("array"),
			bigint: createPrimitiveTypeChecker("bigint"),
			bool: createPrimitiveTypeChecker("boolean"),
			func: createPrimitiveTypeChecker("function"),
			number: createPrimitiveTypeChecker("number"),
			object: createPrimitiveTypeChecker("object"),
			string: createPrimitiveTypeChecker("string"),
			symbol: createPrimitiveTypeChecker("symbol"),
			any: createAnyTypeChecker(),
			arrayOf: createArrayOfTypeChecker,
			element: createElementTypeChecker(),
			elementType: createElementTypeTypeChecker(),
			instanceOf: createInstanceTypeChecker,
			node: createNodeChecker(),
			objectOf: createObjectOfTypeChecker,
			oneOf: createEnumTypeChecker,
			oneOfType: createUnionTypeChecker,
			shape: createShapeTypeChecker,
			exact: createStrictShapeTypeChecker
		};
		/**
		* inlined Object.is polyfill to avoid requiring consumers ship their own
		* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		*/
		function is(x, y) {
			if (x === y) return x !== 0 || 1 / x === 1 / y;
			else return x !== x && y !== y;
		}
		/**
		* We use an Error-like object for backward compatibility as people may call
		* PropTypes directly and inspect their output. However, we don't use real
		* Errors anymore. We don't inspect their stack anyway, and creating them
		* is prohibitively expensive if they are created too often, such as what
		* happens in oneOfType() for any type before the one that matched.
		*/
		function PropTypeError(message, data) {
			this.message = message;
			this.data = data && typeof data === "object" ? data : {};
			this.stack = "";
		}
		PropTypeError.prototype = Error.prototype;
		function createChainableTypeChecker(validate) {
			var manualPropTypeCallCache = {};
			var manualPropTypeWarningCount = 0;
			function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
				componentName = componentName || ANONYMOUS;
				propFullName = propFullName || propName;
				if (secret !== ReactPropTypesSecret) {
					if (throwOnDirectAccess$1) {
						var err = /* @__PURE__ */ new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
						err.name = "Invariant Violation";
						throw err;
					} else if (typeof console !== "undefined") {
						var cacheKey = componentName + ":" + propName;
						if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
							printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
							manualPropTypeCallCache[cacheKey] = true;
							manualPropTypeWarningCount++;
						}
					}
				}
				if (props[propName] == null) {
					if (isRequired) {
						if (props[propName] === null) return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
						return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
					}
					return null;
				} else return validate(props, propName, componentName, location, propFullName);
			}
			var chainedCheckType = checkType.bind(null, false);
			chainedCheckType.isRequired = checkType.bind(null, true);
			return chainedCheckType;
		}
		function createPrimitiveTypeChecker(expectedType) {
			function validate(props, propName, componentName, location, propFullName, secret) {
				var propValue = props[propName];
				if (getPropType(propValue) !== expectedType) {
					var preciseType = getPreciseType(propValue);
					return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), { expectedType });
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createAnyTypeChecker() {
			return createChainableTypeChecker(emptyFunctionThatReturnsNull);
		}
		function createArrayOfTypeChecker(typeChecker) {
			function validate(props, propName, componentName, location, propFullName) {
				if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
				var propValue = props[propName];
				if (!Array.isArray(propValue)) {
					var propType = getPropType(propValue);
					return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
				}
				for (var i = 0; i < propValue.length; i++) {
					var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
					if (error instanceof Error) return error;
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createElementTypeChecker() {
			function validate(props, propName, componentName, location, propFullName) {
				var propValue = props[propName];
				if (!isValidElement(propValue)) {
					var propType = getPropType(propValue);
					return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createElementTypeTypeChecker() {
			function validate(props, propName, componentName, location, propFullName) {
				var propValue = props[propName];
				if (!ReactIs$1.isValidElementType(propValue)) {
					var propType = getPropType(propValue);
					return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createInstanceTypeChecker(expectedClass) {
			function validate(props, propName, componentName, location, propFullName) {
				if (!(props[propName] instanceof expectedClass)) {
					var expectedClassName = expectedClass.name || ANONYMOUS;
					var actualClassName = getClassName(props[propName]);
					return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createEnumTypeChecker(expectedValues) {
			if (!Array.isArray(expectedValues)) {
				if (arguments.length > 1) printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
				else printWarning("Invalid argument supplied to oneOf, expected an array.");
				return emptyFunctionThatReturnsNull;
			}
			function validate(props, propName, componentName, location, propFullName) {
				var propValue = props[propName];
				for (var i = 0; i < expectedValues.length; i++) if (is(propValue, expectedValues[i])) return null;
				var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
					if (getPreciseType(value) === "symbol") return String(value);
					return value;
				});
				return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
			}
			return createChainableTypeChecker(validate);
		}
		function createObjectOfTypeChecker(typeChecker) {
			function validate(props, propName, componentName, location, propFullName) {
				if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
				var propValue = props[propName];
				var propType = getPropType(propValue);
				if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
				for (var key in propValue) if (has(propValue, key)) {
					var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
					if (error instanceof Error) return error;
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createUnionTypeChecker(arrayOfTypeCheckers) {
			if (!Array.isArray(arrayOfTypeCheckers)) {
				printWarning("Invalid argument supplied to oneOfType, expected an instance of array.");
				return emptyFunctionThatReturnsNull;
			}
			for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
				var checker = arrayOfTypeCheckers[i];
				if (typeof checker !== "function") {
					printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
					return emptyFunctionThatReturnsNull;
				}
			}
			function validate(props, propName, componentName, location, propFullName) {
				var expectedTypes = [];
				for (var i$1 = 0; i$1 < arrayOfTypeCheckers.length; i$1++) {
					var checker$1 = arrayOfTypeCheckers[i$1];
					var checkerResult = checker$1(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
					if (checkerResult == null) return null;
					if (checkerResult.data && has(checkerResult.data, "expectedType")) expectedTypes.push(checkerResult.data.expectedType);
				}
				var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
				return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
			}
			return createChainableTypeChecker(validate);
		}
		function createNodeChecker() {
			function validate(props, propName, componentName, location, propFullName) {
				if (!isNode(props[propName])) return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function invalidValidatorError(componentName, location, propFullName, key, type) {
			return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
		}
		function createShapeTypeChecker(shapeTypes) {
			function validate(props, propName, componentName, location, propFullName) {
				var propValue = props[propName];
				var propType = getPropType(propValue);
				if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
				for (var key in shapeTypes) {
					var checker = shapeTypes[key];
					if (typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
					var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
					if (error) return error;
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function createStrictShapeTypeChecker(shapeTypes) {
			function validate(props, propName, componentName, location, propFullName) {
				var propValue = props[propName];
				var propType = getPropType(propValue);
				if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
				for (var key in assign({}, props[propName], shapeTypes)) {
					var checker = shapeTypes[key];
					if (has(shapeTypes, key) && typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
					if (!checker) return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
					var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
					if (error) return error;
				}
				return null;
			}
			return createChainableTypeChecker(validate);
		}
		function isNode(propValue) {
			switch (typeof propValue) {
				case "number":
				case "string":
				case "undefined": return true;
				case "boolean": return !propValue;
				case "object":
					if (Array.isArray(propValue)) return propValue.every(isNode);
					if (propValue === null || isValidElement(propValue)) return true;
					var iteratorFn = getIteratorFn(propValue);
					if (iteratorFn) {
						var iterator = iteratorFn.call(propValue);
						var step;
						if (iteratorFn !== propValue.entries) {
							while (!(step = iterator.next()).done) if (!isNode(step.value)) return false;
						} else while (!(step = iterator.next()).done) {
							var entry = step.value;
							if (entry) {
								if (!isNode(entry[1])) return false;
							}
						}
					} else return false;
					return true;
				default: return false;
			}
		}
		function isSymbol$1(propType, propValue) {
			if (propType === "symbol") return true;
			if (!propValue) return false;
			if (propValue["@@toStringTag"] === "Symbol") return true;
			if (typeof Symbol === "function" && propValue instanceof Symbol) return true;
			return false;
		}
		function getPropType(propValue) {
			var propType = typeof propValue;
			if (Array.isArray(propValue)) return "array";
			if (propValue instanceof RegExp) return "object";
			if (isSymbol$1(propType, propValue)) return "symbol";
			return propType;
		}
		function getPreciseType(propValue) {
			if (typeof propValue === "undefined" || propValue === null) return "" + propValue;
			var propType = getPropType(propValue);
			if (propType === "object") {
				if (propValue instanceof Date) return "date";
				else if (propValue instanceof RegExp) return "regexp";
			}
			return propType;
		}
		function getPostfixForTypeWarning(value) {
			var type = getPreciseType(value);
			switch (type) {
				case "array":
				case "object": return "an " + type;
				case "boolean":
				case "date":
				case "regexp": return "a " + type;
				default: return type;
			}
		}
		function getClassName(propValue) {
			if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
			return propValue.constructor.name;
		}
		ReactPropTypes.checkPropTypes = checkPropTypes;
		ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
		ReactPropTypes.PropTypes = ReactPropTypes;
		return ReactPropTypes;
	};
}) });

//#endregion
//#region node_modules/prop-types/index.js
var require_prop_types = /* @__PURE__ */ __commonJS({ "node_modules/prop-types/index.js": ((exports, module) => {
	var ReactIs = require_react_is();
	var throwOnDirectAccess = true;
	module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroll-hash.js
var require_scroll_hash = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroll-hash.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	require_passive_event_listeners();
	var _utils = require_utils();
	var _utils2 = _interopRequireDefault$6(_utils);
	function _interopRequireDefault$6(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	var scrollHash$1 = {
		mountFlag: false,
		initialized: false,
		scroller: null,
		containers: {},
		mount: function mount(scroller) {
			this.scroller = scroller;
			this.handleHashChange = this.handleHashChange.bind(this);
			window.addEventListener("hashchange", this.handleHashChange);
			this.initStateFromHash();
			this.mountFlag = true;
		},
		mapContainer: function mapContainer(to, container) {
			this.containers[to] = container;
		},
		isMounted: function isMounted() {
			return this.mountFlag;
		},
		isInitialized: function isInitialized() {
			return this.initialized;
		},
		initStateFromHash: function initStateFromHash() {
			var _this = this;
			var hash = this.getHash();
			if (hash) window.setTimeout(function() {
				_this.scrollTo(hash, true);
				_this.initialized = true;
			}, 10);
			else this.initialized = true;
		},
		scrollTo: function scrollTo$1(to, isInit) {
			var scroller = this.scroller;
			if (scroller.get(to) && (isInit || to !== scroller.getActiveLink())) {
				var container = this.containers[to] || document;
				scroller.scrollTo(to, { container });
			}
		},
		getHash: function getHash$1() {
			return _utils2.default.getHash();
		},
		changeHash: function changeHash(to, saveHashHistory) {
			if (this.isInitialized() && _utils2.default.getHash() !== to) _utils2.default.updateHash(to, saveHashHistory);
		},
		handleHashChange: function handleHashChange() {
			this.scrollTo(this.getHash());
		},
		unmount: function unmount() {
			this.scroller = null;
			this.containers = null;
			window.removeEventListener("hashchange", this.handleHashChange);
		}
	};
	exports.default = scrollHash$1;
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroll-link.js
var require_scroll_link = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroll-link.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _extends$3 = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _createClass$4 = function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();
	var _react$4 = require_react();
	var _react2$4 = _interopRequireDefault$5(_react$4);
	var _scrollSpy$1 = require_scroll_spy();
	var _scrollSpy2$1 = _interopRequireDefault$5(_scrollSpy$1);
	var _scroller$2 = require_scroller();
	var _scroller2$2 = _interopRequireDefault$5(_scroller$2);
	var _propTypes$2 = require_prop_types();
	var _propTypes2$2 = _interopRequireDefault$5(_propTypes$2);
	var _scrollHash = require_scroll_hash();
	var _scrollHash2 = _interopRequireDefault$5(_scrollHash);
	function _interopRequireDefault$5(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function _classCallCheck$5(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn$5(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits$5(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	var protoTypes$1 = {
		to: _propTypes2$2.default.string.isRequired,
		containerId: _propTypes2$2.default.string,
		container: _propTypes2$2.default.object,
		activeClass: _propTypes2$2.default.string,
		activeStyle: _propTypes2$2.default.object,
		spy: _propTypes2$2.default.bool,
		horizontal: _propTypes2$2.default.bool,
		smooth: _propTypes2$2.default.oneOfType([_propTypes2$2.default.bool, _propTypes2$2.default.string]),
		offset: _propTypes2$2.default.number,
		delay: _propTypes2$2.default.number,
		isDynamic: _propTypes2$2.default.bool,
		onClick: _propTypes2$2.default.func,
		duration: _propTypes2$2.default.oneOfType([_propTypes2$2.default.number, _propTypes2$2.default.func]),
		absolute: _propTypes2$2.default.bool,
		onSetActive: _propTypes2$2.default.func,
		onSetInactive: _propTypes2$2.default.func,
		ignoreCancelEvents: _propTypes2$2.default.bool,
		hashSpy: _propTypes2$2.default.bool,
		saveHashHistory: _propTypes2$2.default.bool,
		spyThrottle: _propTypes2$2.default.number
	};
	exports.default = function(Component, customScroller) {
		var scroller = customScroller || _scroller2$2.default;
		var Link = function(_React$PureComponent) {
			_inherits$5(Link$1, _React$PureComponent);
			function Link$1(props) {
				_classCallCheck$5(this, Link$1);
				var _this = _possibleConstructorReturn$5(this, (Link$1.__proto__ || Object.getPrototypeOf(Link$1)).call(this, props));
				_initialiseProps.call(_this);
				_this.state = { active: false };
				_this.beforeUnmountCallbacks = [];
				return _this;
			}
			_createClass$4(Link$1, [
				{
					key: "getScrollSpyContainer",
					value: function getScrollSpyContainer() {
						var containerId = this.props.containerId;
						var container = this.props.container;
						if (containerId && !container) return document.getElementById(containerId);
						if (container && container.nodeType) return container;
						return document;
					}
				},
				{
					key: "componentDidMount",
					value: function componentDidMount() {
						if (this.props.spy || this.props.hashSpy) {
							var scrollSpyContainer = this.getScrollSpyContainer();
							if (!_scrollSpy2$1.default.isMounted(scrollSpyContainer)) {
								var fn = _scrollSpy2$1.default.mount(scrollSpyContainer, this.props.spyThrottle);
								this.beforeUnmountCallbacks.push(fn);
							}
							if (this.props.hashSpy) {
								if (!_scrollHash2.default.isMounted()) _scrollHash2.default.mount(scroller);
								_scrollHash2.default.mapContainer(this.props.to, scrollSpyContainer);
							}
							_scrollSpy2$1.default.addSpyHandler(this.spyHandler, scrollSpyContainer);
							this.setState({ container: scrollSpyContainer });
						}
					}
				},
				{
					key: "componentWillUnmount",
					value: function componentWillUnmount() {
						_scrollSpy2$1.default.unmount(this.stateHandler, this.spyHandler);
						this.beforeUnmountCallbacks.forEach(function(fn) {
							return fn();
						});
					}
				},
				{
					key: "render",
					value: function render() {
						var className = "";
						if (this.state && this.state.active) className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
						else className = this.props.className;
						var style = {};
						if (this.state && this.state.active) style = _extends$3({}, this.props.style, this.props.activeStyle);
						else style = _extends$3({}, this.props.style);
						var props = _extends$3({}, this.props);
						for (var prop in protoTypes$1) if (props.hasOwnProperty(prop)) delete props[prop];
						props.className = className;
						props.style = style;
						props.onClick = this.handleClick;
						return _react2$4.default.createElement(Component, props);
					}
				}
			]);
			return Link$1;
		}(_react2$4.default.PureComponent);
		var _initialiseProps = function _initialiseProps$1() {
			var _this2 = this;
			this.scrollTo = function(to, props) {
				scroller.scrollTo(to, _extends$3({}, _this2.state, props));
			};
			this.handleClick = function(event) {
				if (_this2.props.onClick) _this2.props.onClick(event);
				if (event.stopPropagation) event.stopPropagation();
				if (event.preventDefault) event.preventDefault();
				_this2.scrollTo(_this2.props.to, _this2.props);
			};
			this.spyHandler = function(x, y) {
				var scrollSpyContainer = _this2.getScrollSpyContainer();
				if (_scrollHash2.default.isMounted() && !_scrollHash2.default.isInitialized()) return;
				var horizontal = _this2.props.horizontal;
				var to = _this2.props.to;
				var element = null;
				var isInside = void 0;
				var isOutside = void 0;
				if (horizontal) {
					var elemLeftBound = 0;
					var elemRightBound = 0;
					var containerLeft = 0;
					if (scrollSpyContainer.getBoundingClientRect) containerLeft = scrollSpyContainer.getBoundingClientRect().left;
					if (!element || _this2.props.isDynamic) {
						element = scroller.get(to);
						if (!element) return;
						var cords = element.getBoundingClientRect();
						elemLeftBound = cords.left - containerLeft + x;
						elemRightBound = elemLeftBound + cords.width;
					}
					var offsetX = x - _this2.props.offset;
					isInside = offsetX >= Math.floor(elemLeftBound) && offsetX < Math.floor(elemRightBound);
					isOutside = offsetX < Math.floor(elemLeftBound) || offsetX >= Math.floor(elemRightBound);
				} else {
					var elemTopBound = 0;
					var elemBottomBound = 0;
					var containerTop = 0;
					if (scrollSpyContainer.getBoundingClientRect) containerTop = scrollSpyContainer.getBoundingClientRect().top;
					if (!element || _this2.props.isDynamic) {
						element = scroller.get(to);
						if (!element) return;
						var _cords = element.getBoundingClientRect();
						elemTopBound = _cords.top - containerTop + y;
						elemBottomBound = elemTopBound + _cords.height;
					}
					var offsetY = y - _this2.props.offset;
					isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
					isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
				}
				var activeLink = scroller.getActiveLink();
				if (isOutside) {
					if (to === activeLink) scroller.setActiveLink(void 0);
					if (_this2.props.hashSpy && _scrollHash2.default.getHash() === to) {
						var _props$saveHashHistor = _this2.props.saveHashHistory, saveHashHistory = _props$saveHashHistor === void 0 ? false : _props$saveHashHistor;
						_scrollHash2.default.changeHash("", saveHashHistory);
					}
					if (_this2.props.spy && _this2.state.active) {
						_this2.setState({ active: false });
						_this2.props.onSetInactive && _this2.props.onSetInactive(to, element);
					}
				}
				if (isInside && (activeLink !== to || _this2.state.active === false)) {
					scroller.setActiveLink(to);
					var _props$saveHashHistor2 = _this2.props.saveHashHistory, _saveHashHistory = _props$saveHashHistor2 === void 0 ? false : _props$saveHashHistor2;
					_this2.props.hashSpy && _scrollHash2.default.changeHash(to, _saveHashHistory);
					if (_this2.props.spy) {
						_this2.setState({ active: true });
						_this2.props.onSetActive && _this2.props.onSetActive(to, element);
					}
				}
			};
		};
		Link.propTypes = protoTypes$1;
		Link.defaultProps = { offset: 0 };
		return Link;
	};
}) });

//#endregion
//#region node_modules/react-scroll/modules/components/Link.js
var require_Link = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/components/Link.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _react$3 = require_react();
	var _react2$3 = _interopRequireDefault$4(_react$3);
	var _scrollLink$2 = require_scroll_link();
	var _scrollLink2$2 = _interopRequireDefault$4(_scrollLink$2);
	function _interopRequireDefault$4(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function _classCallCheck$4(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn$4(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits$4(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	var LinkElement = function(_React$Component) {
		_inherits$4(LinkElement$1, _React$Component);
		function LinkElement$1() {
			var _ref;
			var _temp, _this, _ret;
			_classCallCheck$4(this, LinkElement$1);
			for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
			return _ret = (_temp = (_this = _possibleConstructorReturn$4(this, (_ref = LinkElement$1.__proto__ || Object.getPrototypeOf(LinkElement$1)).call.apply(_ref, [this].concat(args))), _this), _this.render = function() {
				return _react2$3.default.createElement("a", _this.props, _this.props.children);
			}, _temp), _possibleConstructorReturn$4(_this, _ret);
		}
		return LinkElement$1;
	}(_react2$3.default.Component);
	exports.default = (0, _scrollLink2$2.default)(LinkElement);
}) });

//#endregion
//#region node_modules/react-scroll/modules/components/Button.js
var require_Button = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/components/Button.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _createClass$3 = function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();
	var _react$2 = require_react();
	var _react2$2 = _interopRequireDefault$3(_react$2);
	var _scrollLink$1 = require_scroll_link();
	var _scrollLink2$1 = _interopRequireDefault$3(_scrollLink$1);
	function _interopRequireDefault$3(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function _classCallCheck$3(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn$3(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits$3(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	var ButtonElement = function(_React$Component) {
		_inherits$3(ButtonElement$1, _React$Component);
		function ButtonElement$1() {
			_classCallCheck$3(this, ButtonElement$1);
			return _possibleConstructorReturn$3(this, (ButtonElement$1.__proto__ || Object.getPrototypeOf(ButtonElement$1)).apply(this, arguments));
		}
		_createClass$3(ButtonElement$1, [{
			key: "render",
			value: function render() {
				return _react2$2.default.createElement("button", this.props, this.props.children);
			}
		}]);
		return ButtonElement$1;
	}(_react2$2.default.Component);
	exports.default = (0, _scrollLink2$1.default)(ButtonElement);
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/scroll-element.js
var require_scroll_element = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/scroll-element.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _extends$2 = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _createClass$2 = function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();
	var _react$1 = require_react();
	var _react2$1 = _interopRequireDefault$2(_react$1);
	var _reactDom = require_react_dom();
	_interopRequireDefault$2(_reactDom);
	var _scroller$1 = require_scroller();
	var _scroller2$1 = _interopRequireDefault$2(_scroller$1);
	var _propTypes$1 = require_prop_types();
	var _propTypes2$1 = _interopRequireDefault$2(_propTypes$1);
	function _interopRequireDefault$2(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function _classCallCheck$2(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn$2(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits$2(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	exports.default = function(Component) {
		var Element = function(_React$Component) {
			_inherits$2(Element$1, _React$Component);
			function Element$1(props) {
				_classCallCheck$2(this, Element$1);
				var _this = _possibleConstructorReturn$2(this, (Element$1.__proto__ || Object.getPrototypeOf(Element$1)).call(this, props));
				_this.childBindings = { domNode: null };
				return _this;
			}
			_createClass$2(Element$1, [
				{
					key: "componentDidMount",
					value: function componentDidMount() {
						if (typeof window === "undefined") return false;
						this.registerElems(this.props.name);
					}
				},
				{
					key: "componentDidUpdate",
					value: function componentDidUpdate(prevProps) {
						if (this.props.name !== prevProps.name) this.registerElems(this.props.name);
					}
				},
				{
					key: "componentWillUnmount",
					value: function componentWillUnmount() {
						if (typeof window === "undefined") return false;
						_scroller2$1.default.unregister(this.props.name);
					}
				},
				{
					key: "registerElems",
					value: function registerElems(name) {
						_scroller2$1.default.register(name, this.childBindings.domNode);
					}
				},
				{
					key: "render",
					value: function render() {
						return _react2$1.default.createElement(Component, _extends$2({}, this.props, { parentBindings: this.childBindings }));
					}
				}
			]);
			return Element$1;
		}(_react2$1.default.Component);
		Element.propTypes = {
			name: _propTypes2$1.default.string,
			id: _propTypes2$1.default.string
		};
		return Element;
	};
}) });

//#endregion
//#region node_modules/react-scroll/modules/components/Element.js
var require_Element = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/components/Element.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _extends$1 = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _createClass$1 = function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();
	var _react = require_react();
	var _react2 = _interopRequireDefault$1(_react);
	var _scrollElement$1 = require_scroll_element();
	var _scrollElement2$1 = _interopRequireDefault$1(_scrollElement$1);
	var _propTypes = require_prop_types();
	var _propTypes2 = _interopRequireDefault$1(_propTypes);
	function _interopRequireDefault$1(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function _classCallCheck$1(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn$1(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits$1(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	var ElementWrapper = function(_React$Component) {
		_inherits$1(ElementWrapper$1, _React$Component);
		function ElementWrapper$1() {
			_classCallCheck$1(this, ElementWrapper$1);
			return _possibleConstructorReturn$1(this, (ElementWrapper$1.__proto__ || Object.getPrototypeOf(ElementWrapper$1)).apply(this, arguments));
		}
		_createClass$1(ElementWrapper$1, [{
			key: "render",
			value: function render() {
				var _this2 = this;
				var newProps = _extends$1({}, this.props);
				delete newProps.name;
				if (newProps.parentBindings) delete newProps.parentBindings;
				return _react2.default.createElement("div", _extends$1({}, newProps, { ref: function ref(el) {
					_this2.props.parentBindings.domNode = el;
				} }), this.props.children);
			}
		}]);
		return ElementWrapper$1;
	}(_react2.default.Component);
	ElementWrapper.propTypes = {
		name: _propTypes2.default.string,
		id: _propTypes2.default.string
	};
	exports.default = (0, _scrollElement2$1.default)(ElementWrapper);
}) });

//#endregion
//#region node_modules/react-scroll/modules/mixins/Helpers.js
var require_Helpers = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/mixins/Helpers.js": ((exports, module) => {
	var _extends = Object.assign || function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		}
		return target;
	};
	var _createClass = function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();
	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _possibleConstructorReturn(self$1, call) {
		if (!self$1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return call && (typeof call === "object" || typeof call === "function") ? call : self$1;
	}
	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true
		} });
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	var React = require_react();
	require_react_dom();
	require_utils();
	var scrollSpy = require_scroll_spy();
	var defaultScroller = require_scroller();
	var PropTypes = require_prop_types();
	var scrollHash = require_scroll_hash();
	var protoTypes = {
		to: PropTypes.string.isRequired,
		containerId: PropTypes.string,
		container: PropTypes.object,
		activeClass: PropTypes.string,
		spy: PropTypes.bool,
		smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
		offset: PropTypes.number,
		delay: PropTypes.number,
		isDynamic: PropTypes.bool,
		onClick: PropTypes.func,
		duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
		absolute: PropTypes.bool,
		onSetActive: PropTypes.func,
		onSetInactive: PropTypes.func,
		ignoreCancelEvents: PropTypes.bool,
		hashSpy: PropTypes.bool,
		spyThrottle: PropTypes.number
	};
	var Helpers = {
		Scroll: function Scroll(Component, customScroller) {
			console.warn("Helpers.Scroll is deprecated since v1.7.0");
			var scroller = customScroller || defaultScroller;
			var Scroll$1 = function(_React$Component) {
				_inherits(Scroll$2, _React$Component);
				function Scroll$2(props) {
					_classCallCheck(this, Scroll$2);
					var _this = _possibleConstructorReturn(this, (Scroll$2.__proto__ || Object.getPrototypeOf(Scroll$2)).call(this, props));
					_initialiseProps.call(_this);
					_this.state = { active: false };
					return _this;
				}
				_createClass(Scroll$2, [
					{
						key: "getScrollSpyContainer",
						value: function getScrollSpyContainer() {
							var containerId = this.props.containerId;
							var container = this.props.container;
							if (containerId) return document.getElementById(containerId);
							if (container && container.nodeType) return container;
							return document;
						}
					},
					{
						key: "componentDidMount",
						value: function componentDidMount() {
							if (this.props.spy || this.props.hashSpy) {
								var scrollSpyContainer = this.getScrollSpyContainer();
								if (!scrollSpy.isMounted(scrollSpyContainer)) scrollSpy.mount(scrollSpyContainer, this.props.spyThrottle);
								if (this.props.hashSpy) {
									if (!scrollHash.isMounted()) scrollHash.mount(scroller);
									scrollHash.mapContainer(this.props.to, scrollSpyContainer);
								}
								if (this.props.spy) scrollSpy.addStateHandler(this.stateHandler);
								scrollSpy.addSpyHandler(this.spyHandler, scrollSpyContainer);
								this.setState({ container: scrollSpyContainer });
							}
						}
					},
					{
						key: "componentWillUnmount",
						value: function componentWillUnmount() {
							scrollSpy.unmount(this.stateHandler, this.spyHandler);
						}
					},
					{
						key: "render",
						value: function render() {
							var className = "";
							if (this.state && this.state.active) className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
							else className = this.props.className;
							var props = _extends({}, this.props);
							for (var prop in protoTypes) if (props.hasOwnProperty(prop)) delete props[prop];
							props.className = className;
							props.onClick = this.handleClick;
							return React.createElement(Component, props);
						}
					}
				]);
				return Scroll$2;
			}(React.Component);
			var _initialiseProps = function _initialiseProps$1() {
				var _this2 = this;
				this.scrollTo = function(to, props) {
					scroller.scrollTo(to, _extends({}, _this2.state, props));
				};
				this.handleClick = function(event) {
					if (_this2.props.onClick) _this2.props.onClick(event);
					if (event.stopPropagation) event.stopPropagation();
					if (event.preventDefault) event.preventDefault();
					_this2.scrollTo(_this2.props.to, _this2.props);
				};
				this.stateHandler = function() {
					if (scroller.getActiveLink() !== _this2.props.to) {
						if (_this2.state !== null && _this2.state.active && _this2.props.onSetInactive) _this2.props.onSetInactive();
						_this2.setState({ active: false });
					}
				};
				this.spyHandler = function(y) {
					var scrollSpyContainer = _this2.getScrollSpyContainer();
					if (scrollHash.isMounted() && !scrollHash.isInitialized()) return;
					var to = _this2.props.to;
					var element = null;
					var elemTopBound = 0;
					var elemBottomBound = 0;
					var containerTop = 0;
					if (scrollSpyContainer.getBoundingClientRect) containerTop = scrollSpyContainer.getBoundingClientRect().top;
					if (!element || _this2.props.isDynamic) {
						element = scroller.get(to);
						if (!element) return;
						var cords = element.getBoundingClientRect();
						elemTopBound = cords.top - containerTop + y;
						elemBottomBound = elemTopBound + cords.height;
					}
					var offsetY = y - _this2.props.offset;
					var isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
					var isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
					var activeLink = scroller.getActiveLink();
					if (isOutside) {
						if (to === activeLink) scroller.setActiveLink(void 0);
						if (_this2.props.hashSpy && scrollHash.getHash() === to) scrollHash.changeHash();
						if (_this2.props.spy && _this2.state.active) {
							_this2.setState({ active: false });
							_this2.props.onSetInactive && _this2.props.onSetInactive();
						}
						return scrollSpy.updateStates();
					}
					if (isInside && activeLink !== to) {
						scroller.setActiveLink(to);
						_this2.props.hashSpy && scrollHash.changeHash(to);
						if (_this2.props.spy) {
							_this2.setState({ active: true });
							_this2.props.onSetActive && _this2.props.onSetActive(to);
						}
						return scrollSpy.updateStates();
					}
				};
			};
			Scroll$1.propTypes = protoTypes;
			Scroll$1.defaultProps = { offset: 0 };
			return Scroll$1;
		},
		Element: function Element(Component) {
			console.warn("Helpers.Element is deprecated since v1.7.0");
			var Element$1 = function(_React$Component2) {
				_inherits(Element$2, _React$Component2);
				function Element$2(props) {
					_classCallCheck(this, Element$2);
					var _this3 = _possibleConstructorReturn(this, (Element$2.__proto__ || Object.getPrototypeOf(Element$2)).call(this, props));
					_this3.childBindings = { domNode: null };
					return _this3;
				}
				_createClass(Element$2, [
					{
						key: "componentDidMount",
						value: function componentDidMount() {
							if (typeof window === "undefined") return false;
							this.registerElems(this.props.name);
						}
					},
					{
						key: "componentDidUpdate",
						value: function componentDidUpdate(prevProps) {
							if (this.props.name !== prevProps.name) this.registerElems(this.props.name);
						}
					},
					{
						key: "componentWillUnmount",
						value: function componentWillUnmount() {
							if (typeof window === "undefined") return false;
							defaultScroller.unregister(this.props.name);
						}
					},
					{
						key: "registerElems",
						value: function registerElems(name) {
							defaultScroller.register(name, this.childBindings.domNode);
						}
					},
					{
						key: "render",
						value: function render() {
							return React.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));
						}
					}
				]);
				return Element$2;
			}(React.Component);
			Element$1.propTypes = {
				name: PropTypes.string,
				id: PropTypes.string
			};
			return Element$1;
		}
	};
	module.exports = Helpers;
}) });

//#endregion
//#region node_modules/react-scroll/modules/index.js
var require_modules = /* @__PURE__ */ __commonJS({ "node_modules/react-scroll/modules/index.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var _Link = require_Link();
	var _Link2 = _interopRequireDefault(_Link);
	var _Button = require_Button();
	var _Button2 = _interopRequireDefault(_Button);
	var _Element = require_Element();
	var _Element2 = _interopRequireDefault(_Element);
	var _scroller = require_scroller();
	var _scroller2 = _interopRequireDefault(_scroller);
	var _scrollEvents = require_scroll_events();
	var _scrollEvents2 = _interopRequireDefault(_scrollEvents);
	var _scrollSpy = require_scroll_spy();
	var _scrollSpy2 = _interopRequireDefault(_scrollSpy);
	var _animateScroll = require_animate_scroll();
	var _animateScroll2 = _interopRequireDefault(_animateScroll);
	var _scrollLink = require_scroll_link();
	var _scrollLink2 = _interopRequireDefault(_scrollLink);
	var _scrollElement = require_scroll_element();
	var _scrollElement2 = _interopRequireDefault(_scrollElement);
	var _Helpers = require_Helpers();
	var _Helpers2 = _interopRequireDefault(_Helpers);
	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	exports.Link = _Link2.default;
	exports.Button = _Button2.default;
	exports.Element = _Element2.default;
	exports.scroller = _scroller2.default;
	exports.Events = _scrollEvents2.default;
	exports.scrollSpy = _scrollSpy2.default;
	exports.animateScroll = _animateScroll2.default;
	exports.ScrollLink = _scrollLink2.default;
	exports.ScrollElement = _scrollElement2.default;
	exports.Helpers = _Helpers2.default;
	exports.default = {
		Link: _Link2.default,
		Button: _Button2.default,
		Element: _Element2.default,
		scroller: _scroller2.default,
		Events: _scrollEvents2.default,
		scrollSpy: _scrollSpy2.default,
		animateScroll: _animateScroll2.default,
		ScrollLink: _scrollLink2.default,
		ScrollElement: _scrollElement2.default,
		Helpers: _Helpers2.default
	};
}) });

//#endregion
export default require_modules();

//# sourceMappingURL=react-scroll.js.map